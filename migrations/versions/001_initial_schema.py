"""initial schema

Revision ID: 001_initial_schema
Revises:
Create Date: 2025-10-06 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '001_initial_schema'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('llm_provider_configurations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('provider_name', sa.String(length=50), nullable=False),
    sa.Column('api_key_encrypted', sa.String(length=500), nullable=False),
    sa.Column('model_name', sa.String(length=100), nullable=False),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_llm_provider_configurations_user_id'), 'llm_provider_configurations', ['user_id'], unique=False)
    op.create_table('monitoring_processes',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('generate_only', sa.Boolean(), nullable=False),
    sa.Column('category_filter', sa.Integer(), nullable=True),
    sa.Column('search_filter', sa.String(length=200), nullable=True),
    sa.Column('tab_filter', sa.String(length=50), nullable=True),
    sa.Column('sort_option', sa.String(length=50), nullable=True),
    sa.Column('max_duration_minutes', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('celery_task_id', sa.String(length=255), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('stopped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('articles_discovered', sa.Integer(), nullable=False),
    sa.Column('comments_generated', sa.Integer(), nullable=False),
    sa.Column('comments_posted', sa.Integer(), nullable=False),
    sa.Column('errors_encountered', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_monitoring_processes_celery_task_id'), 'monitoring_processes', ['celery_task_id'], unique=False)
    op.create_table('mymoment_logins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username_encrypted', sa.String(length=500), nullable=False),
    sa.Column('password_encrypted', sa.String(length=500), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mymoment_logins_user_id'), 'mymoment_logins', ['user_id'], unique=False)
    op.create_table('prompt_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('user_prompt_template', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("(category = 'SYSTEM' AND user_id IS NULL) OR (category = 'USER' AND user_id IS NOT NULL)", name='check_prompt_template_user_consistency'),
    sa.CheckConstraint("category IN ('SYSTEM', 'USER')", name='check_prompt_template_category'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_hash')
    )
    op.create_index('ix_user_sessions_expires_at', 'user_sessions', ['expires_at'], unique=False)
    op.create_index('ix_user_sessions_token_hash', 'user_sessions', ['token_hash'], unique=False)
    op.create_index('ix_user_sessions_user_id_active', 'user_sessions', ['user_id', 'is_active'], unique=False)
    op.create_table('ai_comments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mymoment_article_id', sa.String(length=100), nullable=False),
    sa.Column('mymoment_comment_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('mymoment_login_id', sa.UUID(), nullable=True),
    sa.Column('monitoring_process_id', sa.UUID(), nullable=True),
    sa.Column('prompt_template_id', sa.UUID(), nullable=True),
    sa.Column('llm_provider_id', sa.UUID(), nullable=True),
    sa.Column('article_title', sa.Text(), nullable=False),
    sa.Column('article_author', sa.String(length=200), nullable=False),
    sa.Column('article_category', sa.Integer(), nullable=True),
    sa.Column('article_url', sa.String(length=500), nullable=False),
    sa.Column('article_content', sa.Text(), nullable=False),
    sa.Column('article_raw_html', sa.Text(), nullable=False),
    sa.Column('article_published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('article_edited_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('article_scraped_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('article_tags', sa.Text(), nullable=True),
    sa.Column('article_metadata', sa.JSON(), nullable=True),
    sa.Column('comment_content', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('ai_model_name', sa.String(length=100), nullable=True),
    sa.Column('ai_provider_name', sa.String(length=50), nullable=True),
    sa.Column('generation_tokens', sa.Integer(), nullable=True),
    sa.Column('generation_time_ms', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.CheckConstraint("(status != 'failed') OR (status = 'failed' AND error_message IS NOT NULL)", name='check_failed_status_has_error'),
    sa.CheckConstraint("(status != 'posted') OR (status = 'posted' AND mymoment_comment_id IS NOT NULL)", name='check_posted_status_has_comment_id'),
    sa.CheckConstraint("(status != 'posted') OR (status = 'posted' AND mymoment_login_id IS NOT NULL)", name='check_posted_status_has_login'),
    sa.CheckConstraint("(status != 'posted') OR (status = 'posted' AND posted_at IS NOT NULL)", name='check_posted_status_has_timestamp'),
    sa.CheckConstraint("status IN ('generated', 'posted', 'failed', 'deleted', 'discovered')", name='check_ai_comment_status'),
    sa.ForeignKeyConstraint(['llm_provider_id'], ['llm_provider_configurations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['monitoring_process_id'], ['monitoring_processes.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['mymoment_login_id'], ['mymoment_logins.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['prompt_template_id'], ['prompt_templates.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mymoment_comment_id')
    )
    op.create_index(op.f('ix_ai_comments_monitoring_process_id'), 'ai_comments', ['monitoring_process_id'], unique=False)
    op.create_index(op.f('ix_ai_comments_mymoment_article_id'), 'ai_comments', ['mymoment_article_id'], unique=False)
    op.create_index(op.f('ix_ai_comments_mymoment_login_id'), 'ai_comments', ['mymoment_login_id'], unique=False)
    op.create_index(op.f('ix_ai_comments_status'), 'ai_comments', ['status'], unique=False)
    op.create_index(op.f('ix_ai_comments_user_id'), 'ai_comments', ['user_id'], unique=False)
    op.create_table('monitoring_process_logins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('monitoring_process_id', sa.UUID(), nullable=False),
    sa.Column('mymoment_login_id', sa.UUID(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['monitoring_process_id'], ['monitoring_processes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mymoment_login_id'], ['mymoment_logins.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monitoring_process_id', 'mymoment_login_id', name='uq_monitoring_process_login')
    )
    op.create_table('monitoring_process_prompts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('monitoring_process_id', sa.UUID(), nullable=False),
    sa.Column('prompt_template_id', sa.UUID(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.CheckConstraint('weight > 0.0', name='check_positive_weight'),
    sa.ForeignKeyConstraint(['monitoring_process_id'], ['monitoring_processes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prompt_template_id'], ['prompt_templates.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('monitoring_process_id', 'prompt_template_id', name='uq_monitoring_process_prompt')
    )
    op.create_table('mymoment_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mymoment_login_id', sa.UUID(), nullable=False),
    sa.Column('session_data_encrypted', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_accessed', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['mymoment_login_id'], ['mymoment_logins.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mymoment_sessions_mymoment_login_id'), 'mymoment_sessions', ['mymoment_login_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mymoment_sessions_mymoment_login_id'), table_name='mymoment_sessions')
    op.drop_table('mymoment_sessions')
    op.drop_table('monitoring_process_prompts')
    op.drop_table('monitoring_process_logins')
    op.drop_index(op.f('ix_ai_comments_user_id'), table_name='ai_comments')
    op.drop_index(op.f('ix_ai_comments_status'), table_name='ai_comments')
    op.drop_index(op.f('ix_ai_comments_mymoment_login_id'), table_name='ai_comments')
    op.drop_index(op.f('ix_ai_comments_mymoment_article_id'), table_name='ai_comments')
    op.drop_index(op.f('ix_ai_comments_monitoring_process_id'), table_name='ai_comments')
    op.drop_table('ai_comments')
    op.drop_index('ix_user_sessions_user_id_active', table_name='user_sessions')
    op.drop_index('ix_user_sessions_token_hash', table_name='user_sessions')
    op.drop_index('ix_user_sessions_expires_at', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_table('prompt_templates')
    op.drop_index(op.f('ix_mymoment_logins_user_id'), table_name='mymoment_logins')
    op.drop_table('mymoment_logins')
    op.drop_index(op.f('ix_monitoring_processes_celery_task_id'), table_name='monitoring_processes')
    op.drop_table('monitoring_processes')
    op.drop_index(op.f('ix_llm_provider_configurations_user_id'), table_name='llm_provider_configurations')
    op.drop_table('llm_provider_configurations')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
